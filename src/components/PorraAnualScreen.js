import React, { useState, useEffect } from 'react';
import { db, doc, getDoc, setDoc } from '../firebaseConfig';
import styles from '../styles';
import { LoadingSkeleton } from '../reusableComponents';

const PorraAnualScreen = ({ user, onBack, config }) => {
    const [pronostico, setPronostico] = useState({ ascenso: '', posicion: '' }); const [miPronostico, setMiPronostico] = useState(null); const [isSaving, setIsSaving] = useState(false); const [message, setMessage] = useState(''); const [loading, setLoading] = useState(true);
    useEffect(() => { const pronosticoRef = doc(db, "porraAnualPronosticos", user); getDoc(pronosticoRef).then(docSnap => { if (docSnap.exists()) { setMiPronostico(docSnap.data()); setPronostico(docSnap.data()); } setLoading(false); }); }, [user]);
    const handleGuardar = async (e) => { e.preventDefault(); if (!pronostico.ascenso || !pronostico.posicion) { setMessage("Debes rellenar ambos campos."); return; } setIsSaving(true); const pronosticoRef = doc(db, "porraAnualPronosticos", user); try { await setDoc(pronosticoRef, { ...pronostico, jugador: user, lastUpdated: new Date() }); setMessage("¡Tu pronóstico anual ha sido guardado! Suerte al final de la liga."); setMiPronostico(pronostico); setTimeout(() => { onBack(); }, 4000); } catch (error) { console.error("Error al guardar pronóstico anual:", error); setMessage("Hubo un error al guardar tu pronóstico."); } setIsSaving(false); };
    if (loading) return <LoadingSkeleton />;
    if (config?.estado !== 'Abierta' || miPronostico) { return (<div><button onClick={onBack} style={styles.backButton}>&larr; Volver</button><h2 style={styles.title}>⭐ PORRA ANUAL ⭐</h2><div style={styles.placeholder}>{miPronostico ? (<><h3>Ya has hecho tu apuesta especial</h3><p>Tu pronóstico guardado es:</p><p><strong>¿Asciende?:</strong> {miPronostico.ascenso}</p><p><strong>Posición Final:</strong> {miPronostico.posicion}º</p><p style={{ marginTop: '20px', fontStyle: 'italic' }}>¡Suerte al final de la liga!</p></>) : (<h3>Las apuestas para la Porra Anual están cerradas.</h3>)}</div></div>); }
    return (<div><button onClick={onBack} style={styles.backButton}>&larr; Volver</button><h2 style={styles.title}>⭐ PORRA ANUAL ⭐</h2><form onSubmit={handleGuardar} style={styles.form}><p style={{ textAlign: 'center', marginBottom: '30px', fontSize: '1.1rem' }}>Haz tu pronóstico para el final de la temporada. ¡Solo puedes hacerlo una vez!</p><div style={styles.formGroup}><label style={styles.label}>1. ¿Asciende la UD Las Palmas? <span style={styles.pointsReminder}>(5 Puntos)</span></label><div style={styles.ascensoButtonsContainer}><button type="button" onClick={() => setPronostico(p => ({ ...p, ascenso: 'SI' }))} style={pronostico.ascenso === 'SI' ? styles.ascensoButtonActive : styles.ascensoButton}>SÍ</button><button type="button" onClick={() => setPronostico(p => ({ ...p, ascenso: 'NO' }))} style={pronostico.ascenso === 'NO' ? styles.ascensoButtonActive : styles.ascensoButton}>NO</button></div></div><div style={styles.formGroup}><label style={styles.label}>2. ¿En qué posición terminará? <span style={styles.pointsReminder}>(10 Puntos)</span></label><input type="number" min="1" max="22" name="posicion" value={pronostico.posicion} onChange={(e) => setPronostico(p => ({ ...p, posicion: e.target.value }))} style={{ ...styles.input, textAlign: 'center', fontSize: '2rem', fontFamily: "'Orbitron', sans-serif" }} placeholder="1-22" /></div><p style={{ textAlign: 'center', color: styles.colors.gold, fontWeight: 'bold', fontStyle: 'italic' }}>⭐ ¡Si aciertas las dos preguntas ganarás 20 PUNTOS! ⭐</p><button type="submit" disabled={isSaving} style={styles.mainButton}>{isSaving ? 'GUARDANDO...' : 'GUARDAR PRONÓSTICO ANUAL'}</button>{message && <p style={{ ...styles.message, backgroundColor: styles.colors.success }}>{message}</p>}</form></div>);
};

export default PorraAnualScreen;
